node {
    def mvnHome
    def buildNumber=BUILD_NUMBER
    stage('Preparation') { // for display purposes
        git branch:'pipeline-withdeployment-only',credentialsId: '5906d0e3-9816-404e-9a71-4769555aac72', url: 'https://github.com/param-tst/maven-web-application.git'
        // Get the Maven tool.
        // ** NOTE: This 'M3' Maven tool must be configured
        // **       in the global configuration.
        mvnHome = tool 'maven-latest'
        

    }
    stage('Build') {
        // Run the maven build
        withEnv(["MVN_HOME=$mvnHome"]) {
            if (isUnix()) {
                sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
            } else {
                bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
            }
        }
    }
     
    
  

    stage('build-docker-image') {
   
             sh "docker build -t paramveer1974/gagneza-group:${buildNumber} ."
    

       
    }
    stage('upload-docker-image') {
        withCredentials([string(credentialsId: 'docker_password', variable: 'docker_password')]) {
        sh "docker login -u paramveer1974 -p ${docker_password}"
        sh "docker push paramveer1974/gagneza-group:${buildNumber}"
}
          
    
    

       
    }
     
     stage('container-launch') {
    sshagent(['container-server']) {
    sh "ssh -o StrictHostKeyChecking=no ec2-user@34.214.50.110 docker run -d -p 8080:8080 --name paramContainer${buildNumber} paramveer1974/gagneza-group:${buildNumber}"
}}
}
